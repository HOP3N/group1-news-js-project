{"mappings":"sgBAAAA,EAAA,SAGA,MAAMC,EAAmBC,SAASC,cAAc,kBAE1CC,EAAkB,mCAClBC,EAAc,kDAEpB,IAS4BC,KARP,SAWZC,MAFK,GAAGF,OAAiBC,WAAkBF,kBAEhCI,MAAKC,IACrB,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,KAAA,KAfiBJ,MAC3BC,GAAaR,EAAiBY,UAAYC,EAAoBL,KA2D5DM,UAAUC,aACZD,UAAUC,YAAYC,oBACpB,EAAGC,QAAQC,SAAEA,EAAQC,UAAEA,OA3C7B,IAA8BC,EAAKC,EA4C3BrB,EAAiBY,UAAY,IA5CPQ,EA8CDF,EA9CMG,EA8CIF,EA3C9Bb,MAFK,GAAGF,SAAmBgB,SAAWC,WAAalB,kBAExCI,MAAKC,IACrB,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,KAAA,KAwCHJ,MAAKC,IACJR,EAAiBY,UAAYC,EAAoBL,EAAA,IAElDc,OAAMC,GAASC,QAAQC,IAAI,mCAvCtC,MAAMZ,EAAsBa,IAC1B,MAAMC,KAAEA,GAASD,EAAKE,MAChBA,KAAEA,EAAIC,YAAEA,EAAWC,KAAEA,GAASJ,EAAKK,QAAQ,IAC3CC,KAAEA,GAASN,EAEXO,EAAUC,OAAO,IAAIC,KAAQ,OAC7BC,EAAOF,OAAO,IAAIC,KAAQ,YAoBhC,MAlBe,8KAIsBE,KAAKC,MAAMX,mEAEZC,mDACDI,2GAGgCF,kBAAqBD,oDAE1DI,6CACAG,6KAKvB,C","sources":["src/js/weather.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// import { format } from 'date-fns';\n\nconst weatherContainer = document.querySelector('.weather__list');\n\nconst WEATHER_API_KEY = 'bf0cd5a153ab38d36794a1aaec126d4f';\nconst WEATHER_URL = 'https://api.openweathermap.org/data/2.5/weather';\n\nfunction getWeatherCard() {\n  fetchWeatherByCity('London').then(\n    response => (weatherContainer.innerHTML = createWeatherMarkup(response))\n  );\n  getGeoposition();\n}\n\ngetWeatherCard();\n\nfunction fetchWeatherByCity(cityName) {\n  const url = `${WEATHER_URL}?q=${cityName}&appid=${WEATHER_API_KEY}&units=metric`;\n\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error();\n  });\n}\n\nfunction fetchWeatherByCoords(lat, lon) {\n  const url = `${WEATHER_URL}?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`;\n\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error();\n  });\n}\n\nconst createWeatherMarkup = data => {\n  const { temp } = data.main;\n  const { main, description, icon } = data.weather[0];\n  const { name } = data;\n\n  const weekday = format(new Date(), 'eee');\n  const date = format(new Date(), 'dd LLL y');\n\n  const murkup = `\n\t<li class=\"weather__item-card\">\n\t\t<h3 class=\"weather__title\">Weather</h3>\n\t\t<div class=\"weather__upper-flex-container\">\n\t\t\t<div class=\"weather__temperature\">${Math.floor(temp)}Â°</div>\n\t\t\t<div>\n\t\t\t\t<div class=\"weather__condition\">${main}</div>\n\t\t\t\t<div class=\"weather__location\">${name}</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<img class=\"weather__icon\" src=\"http://openweathermap.org/img/wn/${icon}@2x.png\" alt=\"${description}\">\n\t\t<div>\n\t\t\t<div class=\"weather__date\">${weekday}</div>\n\t\t\t<div class=\"weather__date\">${date}</div>\n\t\t\t<a class=\"weather__link\" href=\"https://www.gismeteo.ua/ua/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">weather for week</a>\n\t\t</div>\n\t</li>\n\t`;\n  return murkup;\n};\n\nfunction getGeoposition() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(\n      ({ coords: { latitude, longitude } }) => {\n        weatherContainer.innerHTML = '';\n\n        fetchWeatherByCoords(latitude, longitude)\n          .then(response => {\n            weatherContainer.innerHTML = createWeatherMarkup(response);\n          })\n          .catch(error => console.log('fetchWeatherByCoords error'));\n      }\n    );\n  }\n}\n"],"names":["parcelRequire","$142771476da5e953$var$weatherContainer","document","querySelector","$142771476da5e953$var$WEATHER_API_KEY","$142771476da5e953$var$WEATHER_URL","cityName","fetch","then","response","ok","json","Error","innerHTML","$142771476da5e953$var$createWeatherMarkup","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","lat","lon","catch","error","console","log","data","temp","main","description","icon","weather","name","weekday","format","Date","date","Math","floor"],"version":3,"file":"index.54ea9111.js.map"}