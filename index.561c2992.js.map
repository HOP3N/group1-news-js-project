{"mappings":"YACA,IAAIA,EAAUC,SAASC,iBAAiB,WACxC,IAAKC,EAAI,EAAGA,EAAIH,EAAQI,OAAQD,IAC9BH,EAAQG,GAAGE,iBAAiB,SAAUC,GAExC,SAASA,EAAUC,GACjB,GAAKA,EAAMC,OAAOC,KAAlB,CACA,IAAIC,EAAUH,EAAMC,OAAOG,WAAWC,SACtC,IAAKT,EAAI,EAAGA,EAAIO,EAAQN,OAAQD,IAEN,WAAtBO,EAAQP,GAAGU,SACVH,EAAQP,GAAGW,aAAa,SACzBP,EAAMC,QAAUE,EAAQP,IAI1BO,EAAQP,GAAGY,gBAAgB,OAVL,CAY1B,CClBA,IAQIC,EAREC,EAAUhB,SAASiB,cAAc,YACvCC,EAAYlB,SAASiB,cAAc,eACnCE,EAAUD,EAAUD,cAAc,aAClCG,EAAaF,EAAUD,cAAc,SACrCI,EAAcH,EAAUD,cAAc,UACtCK,EAAcN,EAAQC,cAAc,iBACpCM,EAAQD,EAAYL,cAAc,OAClCO,EAAYR,EAAQC,cAAc,YAkBlC,SAASQ,EAAUC,GACf,IAA8BC,EAAAD,EAASE,OAAhCC,EAAuBF,EAAvBE,SAAUC,EAAaH,EAAbG,UACjBf,EAAM,uDAAuEgB,OAAhBF,EAAS,SAAiBE,OAAVD,EAAU,oCACvFE,GACJ,CACA,SAASC,EAAQC,GACbf,EAAQgB,UAAYD,EAAME,QAC1BjB,EAAQkB,UAAUC,IAAI,QAC1B,CACA,SAASN,IACLb,EAAQgB,UAAY,6BACpBhB,EAAQkB,UAAUC,IAAI,WACtBC,MAAMxB,GAAKyB,MAAK,SAAAC,G,OAAOA,EAAIC,M,IAAQF,MAAK,SAAAG,G,OAK5C,SAAwBC,GACpB,GAAe,OAAZA,EAAKC,IACJ1B,EAAQkB,UAAUS,QAAQ,UAAW,SACrC3B,EAAQgB,UAAY,GAAoBJ,OAAjBX,EAAW2B,MAAM,gCACvC,CACD,IAAMC,EAAOJ,EAAKK,KACZC,EAAUN,EAAKO,IAAID,QACCE,EAAAR,EAAKS,QAAQ,GAAhCC,EAAmBF,EAAnBE,YAAaC,EAAMH,EAANG,GACiBC,EAAAZ,EAAKa,KAAnCC,EAA8BF,EAA9BE,KAAMC,EAAwBH,EAAxBG,WAAYC,EAAYJ,EAAZI,SAChB,KAANL,EACChC,EAAMsC,IAAM,kBACPN,GAAM,KAAOA,GAAM,IACxBhC,EAAMsC,IAAM,kBACPN,GAAM,KAAOA,GAAM,IACxBhC,EAAMsC,IAAM,iBACPN,GAAM,KAAOA,GAAM,IACxBhC,EAAMsC,IAAM,iBACPN,GAAM,KAAOA,GAAM,IACxBhC,EAAMsC,IAAM,mBACPN,GAAO,KAAOA,GAAM,KAASA,GAAM,KAAOA,GAAM,OACrDhC,EAAMsC,IAAM,kBAGhBvC,EAAYL,cAAc,eAAekB,UAAY2B,KAAKC,MAAML,GAChEpC,EAAYL,cAAc,YAAYkB,UAAYmB,EAClDhC,EAAYL,cAAc,kBAAkBkB,UAAY,GAAYJ,OAATiB,EAAK,MAAYjB,OAARmB,GACpE5B,EAAYL,cAAc,iBAAiBkB,UAAY2B,KAAKC,MAAMJ,GAClErC,EAAYL,cAAc,kBAAkBkB,UAAY,GAAYJ,OAAT6B,EAAS,KACpEzC,EAAQkB,UAAU2B,OAAO,UAAW,SACpC7C,EAAQgB,UAAY,GACpBf,EAAW2B,MAAQ,GACnB/B,EAAQqB,UAAUC,IAAI,SAC1B,CACJ,CAtCsD2B,CAAetB,E,IAASuB,OAAM,WAC5E/C,EAAQgB,UAAY,uBACpBhB,EAAQkB,UAAUS,QAAQ,UAAW,QACzC,GACJ,CAhCA1B,EAAWhB,iBAAiB,SAAS,SAAA+D,GAYrC,IAAoBnB,EAXJ,SAATmB,EAAEC,KAAsC,IAApBhD,EAAW2B,QAWlBC,EAVD5B,EAAW2B,MAW1BhC,EAAM,qDAA0DgB,OAALiB,EAAK,oCAChEhB,IAVJ,IACAX,EAAYjB,iBAAiB,SAAS,WAC/BiE,UAAUC,YACTD,UAAUC,YAAYC,mBAAmB9C,EAAWQ,GAEpDuC,MAAM,2CAEd,IAwDAhD,EAAUpB,iBAAiB,SAAS,WAChCY,EAAQqB,UAAU2B,OAAO,SAC7B,G","sources":["src/js/read.js","src/js/weather.js"],"sourcesContent":["// при открытии следующей закрывается предыдущая\nvar details = document.querySelectorAll('details');\nfor (i = 0; i < details.length; i++) {\n  details[i].addEventListener('toggle', accordion);\n}\nfunction accordion(event) {\n  if (!event.target.open) return;\n  var details = event.target.parentNode.children;\n  for (i = 0; i < details.length; i++) {\n    if (\n      details[i].tagName != 'DETAILS' ||\n      !details[i].hasAttribute('open') ||\n      event.target == details[i]\n    ) {\n      continue;\n    }\n    details[i].removeAttribute('open');\n  }\n}\n\n// ********************************************************\n","const wrapper = document.querySelector(\".wrapper\"),\ninputPart = document.querySelector(\".input-part\"),\ninfoTxt = inputPart.querySelector(\".info-txt\"),\ninputField = inputPart.querySelector(\"input\"),\nlocationBtn = inputPart.querySelector(\"button\"),\nweatherPart = wrapper.querySelector(\".weather-part\"),\nwIcon = weatherPart.querySelector(\"img\"),\narrowBack = wrapper.querySelector(\"header i\");\nlet api;\ninputField.addEventListener(\"keyup\", e =>{\n    if(e.key == \"Enter\" && inputField.value != \"\"){\n        requestApi(inputField.value);\n    }\n});\nlocationBtn.addEventListener(\"click\", () =>{\n    if(navigator.geolocation){\n        navigator.geolocation.getCurrentPosition(onSuccess, onError);\n    }else{\n        alert(\"Your browser not support geolocation api\");\n    }\n});\nfunction requestApi(city){\n    api = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=your_api_key`;\n    fetchData();\n}\nfunction onSuccess(position){\n    const {latitude, longitude} = position.coords;\n    api = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&appid=your_api_key`;\n    fetchData();\n}\nfunction onError(error){\n    infoTxt.innerText = error.message;\n    infoTxt.classList.add(\"error\");\n}\nfunction fetchData(){\n    infoTxt.innerText = \"Getting weather details...\";\n    infoTxt.classList.add(\"pending\");\n    fetch(api).then(res => res.json()).then(result => weatherDetails(result)).catch(() =>{\n        infoTxt.innerText = \"Something went wrong\";\n        infoTxt.classList.replace(\"pending\", \"error\");\n    });\n}\nfunction weatherDetails(info){\n    if(info.cod == \"404\"){\n        infoTxt.classList.replace(\"pending\", \"error\");\n        infoTxt.innerText = `${inputField.value} isn't a valid city name`;\n    }else{\n        const city = info.name;\n        const country = info.sys.country;\n        const {description, id} = info.weather[0];\n        const {temp, feels_like, humidity} = info.main;\n        if(id == 800){\n            wIcon.src = \"icons/clear.svg\";\n        }else if(id >= 200 && id <= 232){\n            wIcon.src = \"icons/storm.svg\";  \n        }else if(id >= 600 && id <= 622){\n            wIcon.src = \"icons/snow.svg\";\n        }else if(id >= 701 && id <= 781){\n            wIcon.src = \"icons/haze.svg\";\n        }else if(id >= 801 && id <= 804){\n            wIcon.src = \"icons/cloud.svg\";\n        }else if((id >= 500 && id <= 531) || (id >= 300 && id <= 321)){\n            wIcon.src = \"icons/rain.svg\";\n        }\n        \n        weatherPart.querySelector(\".temp .numb\").innerText = Math.floor(temp);\n        weatherPart.querySelector(\".weather\").innerText = description;\n        weatherPart.querySelector(\".location span\").innerText = `${city}, ${country}`;\n        weatherPart.querySelector(\".temp .numb-2\").innerText = Math.floor(feels_like);\n        weatherPart.querySelector(\".humidity span\").innerText = `${humidity}%`;\n        infoTxt.classList.remove(\"pending\", \"error\");\n        infoTxt.innerText = \"\";\n        inputField.value = \"\";\n        wrapper.classList.add(\"active\");\n    }\n}\narrowBack.addEventListener(\"click\", ()=>{\n    wrapper.classList.remove(\"active\");\n});"],"names":["$95b4463fc8ac9448$var$details","document","querySelectorAll","i","length","addEventListener","$95b4463fc8ac9448$var$accordion","event","target","open","details","parentNode","children","tagName","hasAttribute","removeAttribute","$b7c37e8f14632f7d$var$api","$b7c37e8f14632f7d$var$wrapper","querySelector","$b7c37e8f14632f7d$var$inputPart","$b7c37e8f14632f7d$var$infoTxt","$b7c37e8f14632f7d$var$inputField","$b7c37e8f14632f7d$var$locationBtn","$b7c37e8f14632f7d$var$weatherPart","$b7c37e8f14632f7d$var$wIcon","$b7c37e8f14632f7d$var$arrowBack","$b7c37e8f14632f7d$var$onSuccess","position","_position_coords","coords","latitude","longitude","concat","$b7c37e8f14632f7d$var$fetchData","$b7c37e8f14632f7d$var$onError","error","innerText","message","classList","add","fetch","then","res","json","result","info","cod","replace","value","city","name","country","sys","_info_weather_","weather","description","id","_info_main","main","temp","feels_like","humidity","src","Math","floor","remove","$b7c37e8f14632f7d$var$weatherDetails","catch","e","key","navigator","geolocation","getCurrentPosition","alert"],"version":3,"file":"index.561c2992.js.map"}