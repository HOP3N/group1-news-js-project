{"mappings":"sgBAAA,IAAAA,EAAAC,EAAA,S,mEAQA,MAAMC,EAAWC,SAASC,eAAe,SACnCC,EAAW,8BACXC,EAAU,mCACVC,EAAc,0CACP,EAAAC,EAAAC,cAEb,IAAIC,EAAW,KAEbC,MAAM,GAAGN,IAAWE,IAAcD,KAC/BM,MAAKC,GAAYA,EAASC,SAC1BF,MAAK,EAACG,QAAEA,MAEPL,EAAWK,EACX,IAAIC,EAAO,GACPD,GACFA,EAAQE,SAAQC,IACd,MAAMC,EAASD,EAAKE,MAAMC,OACtBH,EAAKE,MAAM,GAAG,kBAAkB,GAAGE,IACnC,GACEC,EAAaL,EAAKE,MAAMC,OAASH,EAAKE,MAAM,GAAGI,QAAU,GAC/DR,GAAQ,uCAAuCE,EAAKO,kHAGtBN,aAAkBI,+CACjBL,EAAKQ,mOAITR,EAAKS,uDACAT,EAAKU,yGAEX,EAAA5B,EAAA6B,SAC1BX,EAAKY,eACL,0DAGAZ,EAAKI,gHAKT,IAEEpB,EAAS6B,UAAUC,OAAO,cAE1BhB,EAAO,kCACPd,EAAS6B,UAAUE,IAAI,aAEzB/B,EAASgC,UAAYlB,GACrB,EAAAmB,EAAAC,mBACA,EAAAC,EAAAC,qBAAiB,IAMvBpC,EAASqC,iBAAiB,SAqG1B,SAAwBC,GACtB,GAA2B,eAAvBA,EAAEC,OAAOC,UAA4B,CACvC,IAAIC,EACFH,EAAEC,OAAOG,cAAcA,cAAcA,cAAcC,QAAQC,GAC7D,MAAMC,EAAUrC,EAASsC,MAAKC,GAAMA,EAAGxB,MAAQkB,KAC/C,EAAAO,EAAAC,uBAAsBJ,EACxB,CACF,G","sources":["src/js/get-card-list-popular.js"],"sourcesContent":["import dateFormat, { masks } from 'dateformat';\r\nimport { addToFavorite } from './add-to-favorite';\r\nimport { setFavoritesOnLoad } from './set-favorites-on-load';\r\nimport { getPopular } from './get-popular';\r\nimport { setItemToLocalStorage } from './add-read';\r\n// import { getArticleByCategory } from './api';\r\nimport { getWeatherCard } from './weather'; \r\n\r\nconst cardList = document.getElementById('cards');\r\nconst BASE_URL = 'https://api.nytimes.com/svc';\r\nconst API_KEY = 'SVYGfSzYyEfqvl2Rz9D9zXBCipJV7rQX';\r\nconst POPULAR_URL = '/mostpopular/v2/viewed/1.json?api-key=';\r\nconst temp = getPopular();\r\n// console.log(temp);\r\nlet dataBase = null;\r\nfunction getCardsList() {\r\n  fetch(`${BASE_URL}${POPULAR_URL}${API_KEY}`)\r\n    .then(response => response.json())\r\n    .then(({ results }) => {\r\n      // console.log(results);\r\n      dataBase = results;\r\n      let html = '';\r\n      if (results) {\r\n        results.forEach(card => {\r\n          const imgUrl = card.media.length\r\n            ? card.media[0]['media-metadata'][2].url\r\n            : '';\r\n          const imgCaption = card.media.length ? card.media[0].caption : '';\r\n          html += `<li class = \"card__item\" data-id = \"${card.uri}\">\r\n    <div class=\"card__wrapper\">\r\n      <div class=\"card__thumb\">\r\n        <img class=\"card__img\" src = \"${imgUrl}\" alt = \"${imgCaption}\">\r\n        <p class=\"card__news-category\">${card.section_name}</p>\r\n        <p class=\"card__text-read\">Already read</p>\r\n        <button class=\"favorite-btn\" type=\"button\" data-action=\"favorite-btn\">Add to favorite</button>\r\n      </div>\r\n      <h3 class=\"card__news-title\">${card.title}</h3>\r\n      <p class=\"card__news-description\">${card.abstract}</p>\r\n      <div class=\"card__additional-info-container\">\r\n        <p class=\"card__datetime\">${dateFormat(\r\n          card.published_date,\r\n          'dd/mm/yyyy'\r\n        )}</p>\r\n        <a class=\"card__link\" href=\"${\r\n          card.url\r\n        }\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Read more</a>\r\n      </div>\r\n      \r\n    </div>\r\n</li>`;\r\n        });\r\n        cardList.classList.remove('notFound');\r\n      } else {\r\n        html = \"Sorry, we didn't find any news!\";\r\n        cardList.classList.add('notFound');\r\n      }\r\n      cardList.innerHTML = html;\r\n      getWeatherCard();\r\n      setFavoritesOnLoad();\r\n    });\r\n}\r\ngetCardsList();\r\n\r\n// cardList.addEventListener('click', addToFavorite);\r\ncardList.addEventListener('click', addToReadyRead);\r\n\r\n//----------------------------\r\n// function addToAlreadyRead(e) {\r\n//   if (e.target.className === 'card__link') {\r\n//     let cardItem =\r\n//       e.target.parentElement.parentElement.parentElement.dataset.id;\r\n//     const cardObj = dataBase.find(el => el.uri === cardItem);\r\n\r\n//     console.log(cardObj);\r\n//   }\r\n// }\r\n\r\n// const cardEl = document.querySelector('.js_detalis');\r\n// const LOCAL_STORAGE_KEY = 'read_key'; //клю для локалстореджа\r\n// //Проверка наличия данных в локалсторедж и запись новых данных\r\n// function setItemToLocalStorage(item) {\r\n//   const dataLocalStorage = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n//   //Конвертация формата даты в вид 00/00/00\r\n//   const currentData = new Date();\r\n//   const currentDataString = `${currentData.getDate()}/${\r\n//     currentData.getMonth() + 1\r\n//   }/${currentData.getFullYear()}`; // *******\r\n\r\n//   if (!dataLocalStorage) {\r\n//     const newData = [{ data: currentDataString, items: [item] }];\r\n//     localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(newData));\r\n//     return;\r\n//   }\r\n\r\n//   const dataArr = JSON.parse(dataLocalStorage);\r\n\r\n//   let goodDataFlag = true; //флаг проверки записи в локалсторедж\r\n\r\n//   const newDataArr = dataArr.map(elItem => {\r\n//     if (elItem.data === currentDataString) {\r\n//       goodDataFlag = false;\r\n//       elItem.items.push(item);\r\n//       return elItem;\r\n//     }\r\n//     return elItem;\r\n//   });\r\n\r\n//   if (goodDataFlag) {\r\n//     newDataArr.push({ data: currentDataString, items: [item] });\r\n//   }\r\n\r\n//   localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(newDataArr));\r\n// }\r\n// setItemToLocalStorage({});\r\n// const createCardItem = data => {\r\n//   return `<summary>${data}</summary>`;\r\n//   const macCard = ({ id, text }) => {\r\n//     return `<div>\r\n//     <p>${id}</p>\r\n//     <p>${text}</p>\r\n//     </div>\r\n//     `;\r\n//   };\r\n// };\r\n// *********************************\r\n// const cardElFav = document.querySelector('.js_detalis-fav');\r\n// const FAV_LOCAL_STORAGE_KEY = 'fav_key'; //клю для локалстореджа\r\n// //Проверка наличия данных в локалсторедж и запись новых данных\r\n// function setItemToLocalStorageFav(item) {\r\n//   const dataLocalStorage = localStorage.getItem(FAV_LOCAL_STORAGE_KEY);\r\n//   //Конвертация формата даты в вид 00/00/00\r\n//   const currentData = new Date();\r\n//   const currentDataString = `${currentData.getDate()}/${\r\n//     currentData.getMonth() + 1\r\n//   }/${currentData.getFullYear()}`; // *******\r\n\r\n//   if (!dataLocalStorage) {\r\n//     const newData = [{ data: currentDataString, items: [item] }];\r\n//     localStorage.setItem(FAV_LOCAL_STORAGE_KEY, JSON.stringify(newData));\r\n//     return;\r\n//   }\r\n\r\n//   const dataArr = JSON.parse(dataLocalStorage);\r\n\r\n//   let goodDataFlag = true; //флаг проверки записи в локалсторедж\r\n\r\n//   const newDataArr = dataArr.map(elItem => {\r\n//     console.dir(elItem, 'ffsdafsa');\r\n//     if (elItem.data === currentDataString) {\r\n//       goodDataFlag = false;\r\n//       elItem.items.push(item);\r\n//       return elItem;\r\n//     }\r\n//     return elItem;\r\n//   });\r\n\r\n//   if (goodDataFlag) {\r\n//     newDataArr.push({ data: currentDataString, items: [item] });\r\n//   }\r\n\r\n//   localStorage.setItem(FAV_LOCAL_STORAGE_KEY, JSON.stringify(newDataArr));\r\n// }\r\n// setItemToLocalStorageFav();\r\n// *****************************************\r\n\r\nfunction addToReadyRead(e) {\r\n  if (e.target.className === 'card__link') {\r\n    let cardItem =\r\n      e.target.parentElement.parentElement.parentElement.dataset.id;\r\n    const cardObj = dataBase.find(el => el.uri === cardItem);\r\n    setItemToLocalStorage(cardObj);\r\n  }\r\n}\r\n// function addToFavor(e) {\r\n//   if (e.target.className === 'favorite-btn') {\r\n//     let cardItemFav =\r\n//       e.target.parentElement.parentElement.parentElement.dataset.id;\r\n//     const crdObjFav = dataBase.find(el => el.uri === cardItemFav);\r\n//     setItemToLocalStorageFav(crdObjFav);\r\n//   }\r\n// }\r\n"],"names":["$e0clc","parcelRequire","$e211db0cc6bcdc34$var$cardList","document","getElementById","$e211db0cc6bcdc34$var$BASE_URL","$e211db0cc6bcdc34$var$API_KEY","$e211db0cc6bcdc34$var$POPULAR_URL","$cA4nz","getPopular","$e211db0cc6bcdc34$var$dataBase","fetch","then","response","json","results","html","forEach","card","imgUrl","media","length","url","imgCaption","caption","uri","section_name","title","abstract","default","published_date","classList","remove","add","innerHTML","$1JhkZ","getWeatherCard","$5Xlu9","setFavoritesOnLoad","addEventListener","e","target","className","cardItem","parentElement","dataset","id","cardObj","find","el","$kbCdL","setItemToLocalStorage"],"version":3,"file":"read.0225f135.js.map"}